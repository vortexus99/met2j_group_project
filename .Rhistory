scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2"))
ggplot(data = averages_for_barplot) +
geom_col(mapping=aes(x=occupation, y=average_death_age, fill=occupation)) +
coord_cartesian(ylim = c(60, 80)) +
ggtitle("Average Age of Death per Occupation") +
theme_minimal +
theme(legend.position = 'none') +
xlab("Occupation") + ylab("Average age of death") +
scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2"))
ggplot(data = averages_for_barplot) +
geom_col(mapping=aes(x=occupation, y=average_death_age, fill=occupation)) +
coord_cartesian(ylim = c(60, 80)) +
ggtitle("Average Age of Death per Occupation") +
theme_minimal() +
theme(legend.position = 'none') +
xlab("Occupation") + ylab("Average age of death") +
scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2"))
ggplot(data = averages_for_barplot) +
geom_col(mapping=aes(x=occupation, y=average_death_age, fill=occupation)) +
coord_cartesian(ylim = c(60, 80)) +
ggtitle("Average Age of Death per Occupation") +
theme_classic() +
theme(legend.position = 'none') +
xlab("Occupation") + ylab("Average age of death") +
scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2"))
ggplot(data = averages_for_barplot) +
geom_col(mapping=aes(x=occupation, y=average_death_age, fill=occupation)) +
coord_cartesian(ylim = c(60, 80)) +
ggtitle("Average Age of Death per Occupation") +
theme_minimal() +
theme(legend.position = 'none') +
xlab("Occupation") + ylab("Average age of death") +
scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2"))
ggplot(data = averages_for_barplot) +
geom_col(mapping=aes(x=occupation, y=average_death_age, fill=occupation)) +
geom_errorbar(aes(ymin=average_death_age-sd, ymax=average_death_age+sd), width=.2, position=position_dodge(.9))
averages_for_barplot <- data.frame(occupation = occupations_barplot, average_death_age = average_death_barplot, standard_deviation = sd_death_barplot)
sd_death_barplot <- c(sd(actor$death_age), c(sd(athlete$death_age), c(sd(politician$death_age))))
averages_for_barplot <- data.frame(occupation = occupations_barplot, average_death_age = average_death_barplot, standard_deviation = sd_death_barplot)
ggplot(data = averages_for_barplot) +
geom_col(mapping=aes(x=occupation, y=average_death_age, fill=occupation)) +
geom_errorbar(aes(ymin=average_death_age-sd_death_barplot, ymax=average_death_age+sd_death_barplot), width=.2, position=position_dodge(.9))
ggplot(data = averages_for_barplot, aes(x=occupation, y=average_death_age, fill=occupation)) +
geom_col() +
geom_errorbar(aes(ymin=average_death_age-sd_death_barplot, ymax=average_death_age+sd_death_barplot), width=.2, position=position_dodge(.9))
ggplot(data = averages_for_barplot, aes(x=occupation, y=average_death_age, fill=occupation)) +
geom_col() +
geom_errorbar(aes(ymin=average_death_age-sd_death_barplot, ymax=average_death_age+sd_death_barplot), width=.2, position=position_dodge(.9)) +
coord_cartesian(ylim = c(60, 80)) +
ggtitle("Average Age of Death per Occupation") +
theme_minimal() +
theme(legend.position = 'none') +
xlab("Occupation") + ylab("Average age of death") +
scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2"))
ggplot(data = averages_for_barplot, aes(x=occupation, y=average_death_age, fill=occupation)) +
geom_col() +
geom_errorbar(aes(ymin=average_death_age-sd_death_barplot, ymax=average_death_age+sd_death_barplot), width=.2, position=position_dodge(.9))
ggplot(data = averages_for_barplot, aes(x=occupation, y=average_death_age, fill=occupation)) +
geom_col() +
geom_errorbar(aes(ymin=average_death_age-sd_death_barplot, ymax=average_death_age+sd_death_barplot), width=.2, position=position_dodge(.9)) +
#coord_cartesian(ylim = c(60, 80)) +
ggtitle("Average Age of Death per Occupation") +
theme_minimal() +
theme(legend.position = 'none') +
xlab("Occupation") + ylab("Average age of death") +
scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2"))
ggplot(data = averages_for_barplot, aes(x=occupation, y=average_death_age, fill=occupation)) +
geom_col() +
geom_errorbar(aes(ymin=average_death_age-sd_death_barplot, ymax=average_death_age+sd_death_barplot), width=.2, position=position_dodge(.9)) +
#coord_cartesian(ylim = c(60, 80)) +
ggtitle("Average Age of Death per Occupation") +
theme_minimal() +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5)) +
xlab("Occupation") + ylab("Average age of death") +
scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2"))
geom_violin(data = politician, mapping = aes(x = "Politicians", y = death_age), fill = "lightblue", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
geom_violin(data = athlete, mapping = aes(x = "Athlete", y = death_age), fill = "lightgreen", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
ggtitle("Age of Death Distribution for Different Occupations") +
theme(plot.title = element_text(hjust = 0.5))
geom_violin(data = politician, mapping = aes(x = "Politicians", y = death_age), fill = "lightblue", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
geom_violin(data = athlete, mapping = aes(x = "Athlete", y = death_age), fill = "lightgreen", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
ggtitle("Age of Death Distribution for Different Occupations") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Occupation") + ylab("Age of death")
geom_violin(data = politician, mapping = aes(x = "Politicians", y = death_age), fill = "lightblue", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
geom_violin(data = athlete, mapping = aes(x = "Athlete", y = death_age), fill = "lightgreen", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Age of Death Distribution for Different Occupations") +
xlab("Occupation") + ylab("Age of death")
ggplotly(violinplots)
violinplots <- ggplot() +
geom_violin(data = actor, mapping = aes(x = "Actor", y = death_age, frame=birthYear), fill = "hotpink", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend  = NA)# +
geom_violin(data = politician, mapping = aes(x = "Politicians", y = death_age), fill = "lightblue", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
geom_violin(data = athlete, mapping = aes(x = "Athlete", y = death_age), fill = "lightgreen", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
ggtitle("Age of Death Distribution for Different Occupations") +
xlab("Occupation") + ylab("Age of death")
ggplotly(violinplots)
#import data
pol_act_ath_raw <- read.csv('D:/UCU/Labs/Intro to Data/met2j_group_project/actors_politicians_athletes_1900_1950.csv', stringsAsFactors = FALSE)
#make new dataframe so we don't change anything in raw
pol_act_ath_date <- pol_act_ath_raw
#turn birth and death into date format
pol_act_ath_date$birthDate <- as.Date(pol_act_ath_date$birthDate, format = "%Y-%m-%d")
pol_act_ath_date$deathDate <- as.Date(pol_act_ath_date$deathDate, format = "%Y-%m-%d")
#ccalculates death age and turns actor, politician and athlete into boolean values
pol_act_ath_death_age <- pol_act_ath_date %>%
mutate(
death_age = deathDate - birthDate,
death_age = as.numeric(death_age), #default calculation is with days as units
death_age = death_age/365.242,     #calculates age in years
Actor = as.logical(Actor),
Politician = as.logical(Politician),
Athlete = as.logical(Athlete),
birthYear = as.numeric(format(birthDate, format = "%Y"))
)
#removes impossible values for death_age (like -2000) and entries without values (e.g. person stll alive)
updated_pol_act_ath_death_age <- subset(pol_act_ath_death_age, death_age>0)
#make new datasets with actors, politicians or athletes (if two of these are true, entry counts in both places)
actor <- updated_pol_act_ath_death_age %>% filter(Actor==TRUE)
politician <- updated_pol_act_ath_death_age %>% filter(Politician==TRUE)
athlete <- updated_pol_act_ath_death_age %>% filter(Athlete==TRUE)
violinplots <- ggplot() +
geom_violin(data = actor, mapping = aes(x = "Actor", y = death_age, frame=birthYear), fill = "hotpink", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend  = NA)# +
geom_violin(data = politician, mapping = aes(x = "Politicians", y = death_age), fill = "lightblue", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
geom_violin(data = athlete, mapping = aes(x = "Athlete", y = death_age), fill = "lightgreen", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
ggtitle("Age of Death Distribution for Different Occupations") +
xlab("Occupation") + ylab("Age of death")
ggplotly(violinplots)
violinplots <- ggplot() +
geom_violin(data = actor, mapping = aes(x = "Actor", y = death_age, frame=birthYear), fill = "hotpink", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend  = NA)# +
geom_violin(data = politician, mapping = aes(x = "Politicians", y = death_age), fill = "lightblue", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
geom_violin(data = athlete, mapping = aes(x = "Athlete", y = death_age), fill = "lightgreen", stat = "ydensity",
position = "dodge", trim = TRUE, draw_quantiles = c(0.25, 0.5, 0.75),
scale = "area", na.rm = FALSE, show.legend = NA) +
ggtitle("Age of Death Distribution for Different Occupations") +
xlab("Occupation") + ylab("Age of death")
library('wesanderson')
ggplot(data=bound_data) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=3, name="GrandBudapest2")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="GrandBudapest2")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="GrandBudapest")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
?wesanderson
wesanderson
?wes_palette
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="Royal1")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="Cavalcanti1")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
?wes_palette
ggplot(data=bound_data) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplot(data=bound_data) +
filter(Cause_of_Death_cat == c("Unknown", "Disease", "Crime")) %>%
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplot(data=bound_data) +
filter(bound_data$Cause_of_Death_cat == c("Unknown", "Disease", "Crime")) %>%
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplot(data=bound_data) +
filter(bound_data$Cause_of_Death_cat == c("Disease", "Suicide", "Crime")) %>%
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
filter(bound_data$Cause_of_Death_cat == c("Disease", "Suicide", "Crime")) %>%
ggplot(data=bound_data) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
filter(bound_data$Cause_of_Death_cat == c("Disease", "Suicide", "Crime")) %>%
ggplot(data=bound_data) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplotly(lines)
linesh <- bound_data %>%
filter(Cause_of_Death_cat == c("Suicide", "Disease", "Crime")) %>%
plot_ly(
x= ~birthYear,
y= 'count',
type = 'line',
split = ~occupation_new
) %>%
layout(
xaxis = list(
title = "Birthyear"
),
yaxis = list(
title = "Count",
zeroline = FALSE
)
)
ggplotly(lines)
ggplotly(linesh)
linesh <- bound_data %>%
filter(Cause_of_Death_cat == c("Suicide", "Disease", "Crime")) %>%
plot_ly(
x= ~birthYear,
y= 'count',
type = 'surface',
split = ~occupation_new
) %>%
layout(
xaxis = list(
title = "Birthyear"
),
yaxis = list(
title = "Count",
zeroline = FALSE
)
)
ggplotly(linesh)
ggplot(data=bound_data) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="Cavalcanti1")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
?wes_palette
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="FantasticFox")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="Darjeeling")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="Cavalcanti")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="Moonrise2")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="Moonrise3")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="Zissou")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values = wes_palette(n=5, name="GrandBudapest3_6")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
violin <- bound_data %>%
filter(Cause_of_Death_cat == c("Unknown", "Disease", "Crime")) %>%
plot_ly(
x= ~occupation_new,
y= ~death_age,
type = 'violin',
split = ~Cause_of_Death_cat,
box = list(
visible = TRUE
),
meanline = list(
visible = TRUE
)
) %>%
layout(
xaxis = list(
title = "Occupation"
),
yaxis = list(
title = "Age of death",
zeroline = FALSE
)
)
ggplotly(violin)
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "33FFCC", "FF66CC")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "33FFCC", "FF6699")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#33FFCC", "#FF6699")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9", "#33FFCC", "#FF66CC")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#999999", "#E69F00", "#33FFCC", "#FF66CC", "#56B4E9")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#E69F00", "#33FFCC", "#FF66CC", "#56B4E9", "#999999")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#E69F00", "#33FFCC", "#FF66CC", "#CC3300", "#999999")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#CC3300", "#33FFCC", "#FF66CC", "#E69F00", "#999999")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
?subset
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count', subset = (., Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide")) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count', subset = (bound_data, Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide")) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count', subset = (Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide")) +
ggplot(data=bound_data) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count', subset = (Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide"))) +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplot(subset (bound_data, Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide"))) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set3", palette="Set3") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplot(subset (bound_data, Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide"))) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set2", palette="Set2") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
pol_act_ath_raw_1 <- read.csv('D:/UCU/Labs/Intro to Data/met2j_group_project/act_pol_ath_1900_1950_death_cause.csv', stringsAsFactors = FALSE)
pol_act_ath_raw_2 <- read.csv('D:/UCU/Labs/Intro to Data/met2j_group_project/act_pol_ath_1950_1980_death_cause.csv', stringsAsFactors = FALSE)
allthree_raw <- bind_rows(pol_act_ath_raw_1, pol_act_ath_raw_2)
allthree <- allthree_raw
allthree$birthDate <- as.Date(allthree$birthDate, format = "%Y-%m-%d")
allthree$birthYear <- as.Date(allthree$birthYear, format = "%Y")
allthree$deathDate <- as.Date(allthree$deathDate, format = "%Y-%m-%d")
allthree_death_age <- allthree %>%
mutate(
death_age = deathDate - birthDate,
death_age = as.numeric(death_age),
death_age = death_age/365.242,
Actor = as.logical(Actor),
Politician = as.logical(Politician),
Athlete = as.logical(Athlete),
birthYear = as.numeric(format(birthDate, format = "%Y"))
)
actor <- allthree_death_age %>% filter(Actor==TRUE)
politician <- allthree_death_age %>% filter(Politician==TRUE)
athlete <- allthree_death_age %>% filter(Athlete==TRUE)
actor_new <- actor %>%
mutate(
occupation_new = "Actor"
)
athlete_new <- athlete %>%
mutate(
occupation_new = "Athlete"
)
politician_new <- politician %>%
mutate(
occupation_new = "Politician"
)
bound_data <- bind_rows(actor_new, athlete_new, politician_new)
bound_data <- subset(bound_data, death_age>0)
bound_data_decades <-bound_data %>%
mutate(
decade = 10*floor(birthYear/10)
)
violin_all <- bound_data_decades %>%
plot_ly(
x= ~occupation_new,
y= ~death_age,
type = 'violin',
split = ~occupation_new,
frame = ~decade,
box = list(
visible = TRUE
),
meanline = list(
visible = TRUE
)
) %>%
layout(
xaxis = list(
title = "Occupation"
),
yaxis = list(
title = "Age of death",
zeroline = FALSE
)
)
ggplotly(violin_all)
ggplot(subset (bound_data, Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide"))) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set2", palette="Set2") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplot(subset (bound_data, Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide"))) +
geom_line(aes(x=birthYear, color=Cause_of_Death_cat), stat='count') +
theme_classic() +
scale_colour_brewer("Colors in Set2", palette="Set2") +
labs(x='Birthyear', y='Count', color='Cause of Death', linetype='Occupation') +
facet_grid(occupation_new~.)
ggplot(subset (bound_data, Cause_of_Death_cat %in% c("Crime", "Disease", "Suicide"))) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#CC3300", "#33FFCC", "#FF66CC", "#E69F00", "#999999")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
#and as a barplot
ggplot(subset (bound_data, Cause_of_Death_cat %in% c("Crime", "Suicide", "Disease"))) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#CC3300", "#33FFCC", "#FF66CC", "#E69F00", "#999999")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(data=bound_data) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#CC3300", "#33FFCC", "#FF66CC", "#E69F00", "#999999")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
ggplot(subset (bound_data, Cause_of_Death_cat %in% c("Crime", "Suicide", "Disease"))) +
geom_bar(aes(x=occupation_new, fill=Cause_of_Death_cat), stat='count', position = 'stack') +
theme_classic() +
scale_fill_manual(values=c("#CC3300", "#33FFCC", "#FF66CC", "#E69F00", "#999999")) +
labs(x='Occupation', y='Count', fill='Cause of Death')
